`define ENABLE 1'b1
`define DISABLE 1'b0
`define VALID 1'b1
`define INVALID 1'b0

/* Definition with instructions */
`define ALU_OPERATOR_BUS 7:0
`define ALU_CATEGORY_BUS 2:0

`define CATEGORY_NOP        3'b000
`define CATEGORY_LOGIC      3'b001
`define CATEGORY_SHIFT      3'b010       // FIXME: defined by myself
`define CATEGORY_MOVE       3'b011       // FIXME: defined by myself
`define CATEGORY_ARITHMETIC 3'b100       // FIXME: defined by myself
`define CATEGORY_MULTIPLY   3'b101       // FIXME: defined by myself

`define OPERATOR_NOP   8'b00000000       // FIXME: defined by myself
`define OPERATOR_AND   8'b00000001       // FIXME: defined by myself
`define OPERATOR_XOR   8'b00000010       // FIXME: defined by myself
`define OPERATOR_NOR   8'b00000011       // FIXME: defined by myself
`define OPERATOR_SLL   8'b00000100       // FIXME: defined by myself
`define OPERATOR_SRL   8'b00000101       // FIXME: defined by myself
`define OPERATOR_SRA   8'b00000110       // FIXME: defined by myself
`define OPERATOR_MFHI  8'b00000111       // FIXME: defined by myself
`define OPERATOR_MFLO  8'b00001000       // FIXME: defined by myself
`define OPERATOR_MTHI  8'b00001001       // FIXME: defined by myself
`define OPERATOR_MTLO  8'b00001010       // FIXME: defined by myself
`define OPERATOR_MOVN  8'b00001011       // FIXME: defined by myself
`define OPERATOR_MOVZ  8'b00001100       // FIXME: defined by myself
`define OPERATOR_SLT   8'b00001101       // FIXME: defined by myself
`define OPERATOR_SLTU  8'b00001110       // FIXME: defined by myself
`define OPERATOR_ADD   8'b00001111       // FIXME: defined by myself
`define OPERATOR_ADDU  8'b00010000       // FIXME: defined by myself
`define OPERATOR_SUB   8'b00010001       // FIXME: defined by myself
`define OPERATOR_SUBU  8'b00010010       // FIXME: defined by myself
`define OPERATOR_MULT  8'b00010011       // FIXME: defined by myself
`define OPERATOR_ADDI  8'b00010100       // FIXME: defined by myself
`define OPERATOR_ADDIU 8'b00010101       // FIXME: defined by myself
`define OPERATOR_CLZ   8'b00010110       // FIXME: defined by myself
`define OPERATOR_CLO   8'b00010111       // FIXME: defined by myself
`define OPERATOR_MULTU 8'b00011000       // FIXME: defined by myself
`define OPERATOR_MUL   8'b00011001       // FIXME: defined by myself
`define OPERATOR_OR    8'b00100101       // FIXME: defined by myself

`define INST_NOP_ID 6'b000000
`define INST_NOP_CATEGORY `CATEGORY_NOP
`define INST_NOP_OPERATOR `OPERATOR_NOP

`define INST_AND_ID 6'b100100
`define INST_AND_CATEGORY `CATEGORY_LOGIC
`define INST_AND_OPERATOR `OPERATOR_AND

`define INST_ANDI_ID 6'b001100
`define INST_ANDI_CATEGORY `CATEGORY_LOGIC
`define INST_ANDI_OPERATOR `OPERATOR_AND

`define INST_OR_ID 6'b100101
`define INST_OR_CATEGORY `CATEGORY_LOGIC
`define INST_OR_OPERATOR `OPERATOR_OR

`define INST_ORI_ID 6'b001101
`define INST_ORI_CATEGORY `CATEGORY_LOGIC
`define INST_ORI_OPERATOR `OPERATOR_OR

`define INST_XOR_ID 6'b100110
`define INST_XOR_CATEGORY `CATEGORY_LOGIC
`define INST_XOR_OPERATOR `OPERATOR_XOR

`define INST_XORI_ID 6'b001110
`define INST_XORI_CATEGORY `CATEGORY_LOGIC
`define INST_XORI_OPERATOR `OPERATOR_XOR

`define INST_NOR_ID 6'b100111
`define INST_NOR_CATEGORY `CATEGORY_LOGIC
`define INST_NOR_OPERATOR `OPERATOR_NOR

`define INST_LUI_ID 6'b001111
`define INST_LUI_CATEGORY `CATEGORY_LOGIC
`define INST_LUI_OPERATOR `OPERATOR_OR

`define INST_SLL_ID 6'b000000
`define INST_SLL_CATEGORY `CATEGORY_SHIFT
`define INST_SLL_OPERATOR `OPERATOR_SLL

`define INST_SLLV_ID 6'b000100
`define INST_SLLV_CATEGORY `CATEGORY_SHIFT
`define INST_SLLV_OPERATOR `OPERATOR_SLL

`define INST_SRL_ID 6'b000010
`define INST_SRL_CATEGORY `CATEGORY_SHIFT
`define INST_SRL_OPERATOR `OPERATOR_SRL

`define INST_SRLV_ID 6'b000110
`define INST_SRLV_CATEGORY `CATEGORY_SHIFT
`define INST_SRLV_OPERATOR `OPERATOR_SRL

`define INST_SRA_ID 6'b000011
`define INST_SRA_CATEGORY `CATEGORY_SHIFT
`define INST_SRA_OPERATOR `OPERATOR_SRA

`define INST_SRAV_ID 6'b000111
`define INST_SRAV_CATEGORY `CATEGORY_SHIFT
`define INST_SRAV_OPERATOR `OPERATOR_SRA

`define INST_SYNC_ID 6'b001111
`define INST_SYNC_CATEGORY `CATEGORY_NOP
`define INST_SYNC_OPERATOR `OPERATOR_NOP

`define INST_PREF_ID 6'b110011
`define INST_PREF_CATEGORY `CATEGORY_NOP
`define INST_PREF_OPERATOR `OPERATOR_NOP

`define INST_MOVZ_ID 6'b001010
`define INST_MOVZ_CATEGORY `CATEGORY_MOVE
`define INST_MOVZ_OPERATOR `OPERATOR_MOVZ

`define INST_MOVN_ID 6'b001011
`define INST_MOVN_CATEGORY `CATEGORY_MOVE
`define INST_MOVN_OPERATOR `OPERATOR_MOVN

`define INST_MFHI_ID 6'b010000
`define INST_MFHI_CATEGORY `CATEGORY_MOVE
`define INST_MFHI_OPERATOR `OPERATOR_MFHI

`define INST_MTHI_ID 6'b010001
`define INST_MTHI_CATEGORY `CATEGORY_NOP
`define INST_MTHI_OPERATOR `OPERATOR_MTHI

`define INST_MFLO_ID 6'b010010
`define INST_MFLO_CATEGORY `CATEGORY_MOVE
`define INST_MFLO_OPERATOR `OPERATOR_MFLO

`define INST_MTLO_ID 6'b010011
`define INST_MTLO_CATEGORY `CATEGORY_NOP
`define INST_MTLO_OPERATOR `OPERATOR_MTLO

`define INST_SLT_ID 6'b101010
`define INST_SLT_CATEGORY `CATEGORY_ARITHMETIC
`define INST_SLT_OPERATOR `OPERATOR_SLT

`define INST_SLTU_ID 6'b101011
`define INST_SLTU_CATEGORY `CATEGORY_ARITHMETIC
`define INST_SLTU_OPERATOR `OPERATOR_SLTU

`define INST_SLTI_ID 6'b001010
`define INST_SLTI_CATEGORY `CATEGORY_ARITHMETIC
`define INST_SLTI_OPERATOR `OPERATOR_SLT

`define INST_SLTIU_ID 6'b001011
`define INST_SLTIU_CATEGORY `CATEGORY_ARITHMETIC
`define INST_SLTIU_OPERATOR `OPERATOR_SLTU

`define INST_ADD_ID 6'b100000
`define INST_ADD_CATEGORY `CATEGORY_ARITHMETIC
`define INST_ADD_OPERATOR `OPERATOR_ADD

`define INST_ADDU_ID 6'b100001
`define INST_ADDU_CATEGORY `CATEGORY_ARITHMETIC
`define INST_ADDU_OPERATOR `OPERATOR_ADDU

`define INST_SUB_ID 6'b100010
`define INST_SUB_CATEGORY `CATEGORY_ARITHMETIC
`define INST_SUB_OPERATOR `OPERATOR_SUB

`define INST_SUBU_ID 6'b100011
`define INST_SUBU_CATEGORY `CATEGORY_ARITHMETIC
`define INST_SUBU_OPERATOR `OPERATOR_SUBU

`define INST_ADDI_ID 6'b001000
`define INST_ADDI_CATEGORY `CATEGORY_ARITHMETIC
`define INST_ADDI_OPERATOR `OPERATOR_ADDI

`define INST_ADDIU_ID 6'b001001
`define INST_ADDIU_CATEGORY `CATEGORY_ARITHMETIC
`define INST_ADDIU_OPERATOR `OPERATOR_ADDIU

`define INST_CLZ_ID 6'b100000
`define INST_CLZ_CATEGORY `CATEGORY_ARITHMETIC
`define INST_CLZ_OPERATOR `OPERATOR_CLZ

`define INST_CLO_ID 6'b100001
`define INST_CLO_CATEGORY `CATEGORY_ARITHMETIC
`define INST_CLO_OPERATOR `OPERATOR_CLO

`define INST_MULT_ID 6'b011000
`define INST_MULT_CATEGORY `CATEGORY_ARITHMETIC
`define INST_MULT_OPERATOR `OPERATOR_MULT

`define INST_MULTU_ID 6'b011001
`define INST_MULTU_CATEGORY `CATEGORY_ARITHMETIC
`define INST_MULTU_OPERATOR `OPERATOR_MULTU

`define INST_MUL_ID 6'b000010
`define INST_MUL_CATEGORY `CATEGORY_MULTIPLY
`define INST_MUL_OPERATOR `OPERATOR_MUL

`define INST_ADDR_BUS 31:0
`define INST_DATA_BUS 31:0

/* Definition with ROM */
`define MEMO_NUM 128
`define MEMO_NUM_LOG 7

/* Definition with register file */
`define REGS_NUM 32
`define REGS_NUM_LOG 5
`define REGS_ADDR_BUS 4:0
`define REGS_DATA_BUS 31:0
`define DOUBLE_REGS_DATA_BUS 63:0
`define REGS_SIZE 5
